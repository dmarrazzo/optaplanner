<?xml version="1.0" encoding="UTF-8"?>
<solver>
  <!-- To slowly prove there are no bugs in this code -->
  <!-- <environmentMode>FULL_ASSERT</environmentMode> -->
  <moveThreadCount>4</moveThreadCount><!-- To solve faster by saturating multiple CPU cores -->

  <solutionClass>org.optaplanner.examples.flightcrewscheduling.domain.FlightCrewSolution</solutionClass>
  <entityClass>org.optaplanner.examples.flightcrewscheduling.domain.FlightAssignment</entityClass>
  <entityClass>org.optaplanner.examples.flightcrewscheduling.domain.Employee</entityClass>
  <entityClass>org.optaplanner.examples.flightcrewscheduling.domain.Duty</entityClass>

  <scoreDirectorFactory>
    <scoreDrl>org/optaplanner/examples/flightcrewscheduling/solver/flightCrewSchedulingScoreRules.drl</scoreDrl>
  </scoreDirectorFactory>
  
  <!--<termination>-->
    <!--<minutesSpentLimit>5</minutesSpentLimit>-->
  <!--</termination>-->
  <constructionHeuristic/>
  <localSearch>
    <unionMoveSelector>
      <changeMoveSelector/>
      <swapMoveSelector/>
      <!-- TODO Use a sorted pillar to heavily improve feasibility and solution quality https://issues.jboss.org/browse/PLANNER-1217 -->
<!-- 
      <pillarChangeMoveSelector/>
      <pillarSwapMoveSelector/>
-->
      <moveIteratorFactory>
        <moveIteratorFactoryClass>org.optaplanner.examples.flightcrewscheduling.solver.move.FlightCrewSequentialPillarSwapMoveIteratorFactory</moveIteratorFactoryClass>
      </moveIteratorFactory>
    </unionMoveSelector>
  </localSearch>
</solver>